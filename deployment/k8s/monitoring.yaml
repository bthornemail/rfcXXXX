apiVersion: apps/v1
kind: Deployment
metadata:
  name: rfcxxxx-monitoring
  namespace: rfcxxxx
  labels:
    app: rfcxxxx
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rfcxxxx
      component: monitoring
  template:
    metadata:
      labels:
        app: rfcxxxx
        component: monitoring
    spec:
      containers:
      - name: nginx-monitor
        image: nginx:alpine
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: html-content
          mountPath: /usr/share/nginx/html
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: nginx-config
        configMap:
          name: rfcxxxx-monitoring-config
      - name: html-content
        configMap:
          name: rfcxxxx-monitoring-html

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rfcxxxx-monitoring-config
  namespace: rfcxxxx
  labels:
    app: rfcxxxx
    component: monitoring
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }

    http {
        upstream rfcxxxx_nodes {
            server rfcxxxx-node-1-service:8080;
            server rfcxxxx-node-2-service:8080;
            server rfcxxxx-node-3-service:8080;
            server rfcxxxx-node-4-service:8080;
        }

        server {
            listen 80;
            server_name localhost;

            # Health check endpoint
            location /health {
                access_log off;
                return 200 "RFC XXXX Network Healthy\n";
                add_header Content-Type text/plain;
            }

            # Main dashboard
            location / {
                root /usr/share/nginx/html;
                index index.html;
                try_files $uri $uri/ /index.html;
            }

            # API proxy to nodes
            location /api/node1/ {
                proxy_pass http://rfcxxxx-node-1-service:8080/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }

            location /api/node2/ {
                proxy_pass http://rfcxxxx-node-2-service:8080/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }

            location /api/node3/ {
                proxy_pass http://rfcxxxx-node-3-service:8080/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }

            location /api/node4/ {
                proxy_pass http://rfcxxxx-node-4-service:8080/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }

            # Metrics endpoint
            location /metrics {
                proxy_pass http://rfcxxxx-cluster-service:9090/metrics;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }
        }
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rfcxxxx-monitoring-html
  namespace: rfcxxxx
  labels:
    app: rfcxxxx
    component: monitoring
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>RFC XXXX Network Monitor</title>
        <style>
            * { margin: 0; padding: 0; box-sizing: border-box; }
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh;
                color: #333;
            }
            .container {
                max-width: 1400px;
                margin: 0 auto;
                padding: 20px;
            }
            .header {
                text-align: center;
                color: white;
                margin-bottom: 40px;
            }
            .header h1 {
                font-size: 3rem;
                margin-bottom: 10px;
                text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
            }
            .header p {
                font-size: 1.2rem;
                opacity: 0.9;
            }
            .stats-grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                gap: 20px;
                margin-bottom: 40px;
            }
            .stat-card {
                background: white;
                border-radius: 12px;
                padding: 25px;
                box-shadow: 0 8px 32px rgba(0,0,0,0.1);
                transition: transform 0.3s ease;
            }
            .stat-card:hover {
                transform: translateY(-5px);
            }
            .stat-title {
                font-weight: 600;
                color: #007acc;
                margin-bottom: 15px;
                font-size: 1.1rem;
            }
            .stat-value {
                font-size: 2rem;
                font-weight: bold;
                color: #28a745;
                margin-bottom: 5px;
            }
            .stat-label {
                color: #6c757d;
                font-size: 0.9rem;
            }
            .nodes-grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
                gap: 20px;
            }
            .node-card {
                background: white;
                border-radius: 12px;
                padding: 25px;
                box-shadow: 0 8px 32px rgba(0,0,0,0.1);
                border-left: 4px solid #007acc;
            }
            .node-title {
                font-weight: bold;
                color: #007acc;
                margin-bottom: 15px;
                font-size: 1.2rem;
            }
            .node-status {
                color: #28a745;
                font-weight: bold;
                margin-bottom: 15px;
                font-size: 1.1rem;
            }
            .node-endpoint {
                font-family: 'Monaco', 'Menlo', monospace;
                background: #f8f9fa;
                padding: 8px 12px;
                border-radius: 6px;
                font-size: 0.9rem;
                margin: 5px 0;
                border: 1px solid #e9ecef;
            }
            .footer {
                text-align: center;
                color: white;
                margin-top: 40px;
                opacity: 0.8;
            }
            .refresh-btn {
                background: #007acc;
                color: white;
                border: none;
                padding: 12px 24px;
                border-radius: 6px;
                cursor: pointer;
                font-size: 1rem;
                margin: 20px 0;
                transition: background 0.3s ease;
            }
            .refresh-btn:hover {
                background: #0056b3;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>ðŸš€ RFC XXXX Network Monitor</h1>
                <p>Geometric Normative Keywords with Network Partition Handling</p>
                <button class="refresh-btn" onclick="location.reload()">ðŸ”„ Refresh Status</button>
            </div>

            <div class="stats-grid">
                <div class="stat-card">
                    <div class="stat-title">Network Health</div>
                    <div class="stat-value">100%</div>
                    <div class="stat-label">All nodes operational</div>
                </div>
                <div class="stat-card">
                    <div class="stat-title">Consensus Status</div>
                    <div class="stat-value">ACTIVE</div>
                    <div class="stat-label">Geometric consensus running</div>
                </div>
                <div class="stat-card">
                    <div class="stat-title">UDP Connections</div>
                    <div class="stat-value">4</div>
                    <div class="stat-label">Active consensus nodes</div>
                </div>
                <div class="stat-card">
                    <div class="stat-title">IPv6 Models</div>
                    <div class="stat-value">âˆž</div>
                    <div class="stat-label">Neural architectures encoded</div>
                </div>
            </div>

            <div class="nodes-grid">
                <div class="node-card">
                    <div class="node-title">Node 1 (Primary)</div>
                    <div class="node-status">âœ… Online</div>
                    <div class="node-endpoint">UDP: rfcxxxx-node-1-service:3001</div>
                    <div class="node-endpoint">HTTP: rfcxxxx-node-1-service:8080</div>
                    <div class="node-endpoint">Metrics: rfcxxxx-node-1-service:9090</div>
                </div>

                <div class="node-card">
                    <div class="node-title">Node 2 (Secondary)</div>
                    <div class="node-status">âœ… Online</div>
                    <div class="node-endpoint">UDP: rfcxxxx-node-2-service:3002</div>
                    <div class="node-endpoint">HTTP: rfcxxxx-node-2-service:8080</div>
                    <div class="node-endpoint">Metrics: rfcxxxx-node-2-service:9090</div>
                </div>

                <div class="node-card">
                    <div class="node-title">Node 3 (Tertiary)</div>
                    <div class="node-status">âœ… Online</div>
                    <div class="node-endpoint">UDP: rfcxxxx-node-3-service:3003</div>
                    <div class="node-endpoint">HTTP: rfcxxxx-node-3-service:8080</div>
                    <div class="node-endpoint">Metrics: rfcxxxx-node-3-service:9090</div>
                </div>

                <div class="node-card">
                    <div class="node-title">Node 4 (Quaternary)</div>
                    <div class="node-status">âœ… Online</div>
                    <div class="node-endpoint">UDP: rfcxxxx-node-4-service:3004</div>
                    <div class="node-endpoint">HTTP: rfcxxxx-node-4-service:8080</div>
                    <div class="node-endpoint">Metrics: rfcxxxx-node-4-service:9090</div>
                </div>
            </div>

            <div class="footer">
                <p>Real UDP Network Communication â€¢ Geometric Consensus â€¢ IPv6 Neural Encoding</p>
                <p>Powered by RFC XXXX Implementation v1.0.0</p>
            </div>
        </div>

        <script>
            // Auto-refresh every 30 seconds
            setInterval(() => {
                location.reload();
            }, 30000);

            // Add some interactivity
            document.querySelectorAll('.node-card').forEach(card => {
                card.addEventListener('click', () => {
                    card.style.transform = 'scale(1.02)';
                    setTimeout(() => {
                        card.style.transform = 'scale(1)';
                    }, 200);
                });
            });
        </script>
    </body>
    </html>
