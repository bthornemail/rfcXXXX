apiVersion: v1
kind: Secret
metadata:
  name: rfcxxxx-secrets
  namespace: rfcxxxx
  labels:
    app: rfcxxxx
    component: secrets
type: Opaque
data:
  # Base64 encoded secrets (use: echo -n "value" | base64)
  # Example values - replace with actual secrets in production

  # API Keys (if needed for external services)
  api-key: YWJjZGVmZ2hpams=  # "abcdefghijk" in base64

  # Database credentials (if using external database)
  db-username: YWRtaW4=  # "admin" in base64
  db-password: cGFzc3dvcmQ=  # "password" in base64

  # JWT secrets (if implementing authentication)
  jwt-secret: c3VwZXItc2VjcmV0LWp3dC1rZXk=  # "super-secret-jwt-key" in base64

  # TLS certificates (if using HTTPS)
  tls-cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t  # Example cert in base64
  tls-key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t  # Example key in base64

  # Encryption keys for weight storage
  encryption-key: YWVzLTI1Ni1lbmNyeXB0aW9uLWtleQ==  # "aes-256-encryption-key" in base64

---
apiVersion: v1
kind: Secret
metadata:
  name: rfcxxxx-registry-secret
  namespace: rfcxxxx
  labels:
    app: rfcxxxx
    component: registry-secret
type: kubernetes.io/dockerconfigjson
data:
  # Docker registry credentials (if using private registry)
  # Use: kubectl create secret docker-registry rfcxxxx-registry-secret \
  #   --docker-server=your-registry.com \
  #   --docker-username=your-username \
  #   --docker-password=your-password \
  #   --docker-email=your-email \
  #   --namespace=rfcxxxx
  .dockerconfigjson: eyJhdXRocyI6e319  # Empty auth config in base64
